Definition:
A Queue is a linear data structure that follows 
FIFO (First In, First Out) principle.

A list or collection with the restriction that insertion can be performed at one end (rear) 
and deletion can be performed at the other end (front)

Example: 
A line of people at a ticket counter – the person who comes first gets served first.

Basic Operations:
Enqueue(x) : void Enqueue(int x);
Dequeue() : int Dequeue();
Peek() or Front() : get front element without removing
isEmpty()
isFull()
 
Time Complexity should be O(1).

we have front and rear. 
In hota hai rear mein and out hota hai front se.

Types of Queues:
Simple
Circular
Double-Ended Queue (Deque)
Priority Queue

Implementation:
Using Array
Using LL

Codes: 
1. Queue using Array:  Enqueue; Dequeue; Display
2. Queue using Linked List: Enqueue; Dequeue; Display
3. Circular Queue using Array
4. Circular Queue using Linked List
5. Double Ended Queue (Deque): Input-restricted deque; Output-restricted deque
6. Priority Queue (using Array or Linked List)
7. Implementation of Queue using Stacks (important trick question).
8. Implementation of Stack using Queues (reverse trick).



Linear Queue Drawback
1. Fixed array → after some dequeues, free space at front cannot be reused.
2. Leads to false full situation.
3. Solved by circular queue.


